package twopiradians.blockArmor.common.config;

import java.io.File;
import java.util.ArrayList;

import net.minecraftforge.common.config.Configuration;
import net.minecraftforge.common.config.Property;
import net.minecraftforge.fml.client.event.ConfigChangedEvent;
import net.minecraftforge.fml.common.eventhandler.EventPriority;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import twopiradians.blockArmor.common.BlockArmor;
import twopiradians.blockArmor.common.item.ArmorSet;

public class Config 
{
	public static Configuration config;

	public static final String SET_EFFECTS_CATEGORY = "config.armorSetEffects"; 
	/**0 = enabled, 1 = disabled, 2 = custom*/
	public static int setEffects;
	private static final ArrayList<String> setEffectsArray = new ArrayList<String>() {{add("Enabled"); add("Disabled"); add("Custom");}};

	public static final String AUTO_GEN_SETS_CATEGORY = "config.autoGeneratedArmorSets";
	/**0 = enabled, 1 = disabled, 2 = custom*/
	public static int autoGenSets;
	private static final ArrayList<String> autoGenSetsArray = new ArrayList<String>() {{add("Enabled"); add("Disabled"); add("Custom");}};

	public static int piecesForSet;
	
	public static void postInit(final File file) 
	{
		Config.config = new Configuration(file);
		Config.config.load();
		Config.syncConfig();
		Config.config.save();
	}

	public static void syncConfig() 
	{
		//Auto-generated sets
		ArrayList<String> list = new ArrayList<String>(Config.config.getCategory(AUTO_GEN_SETS_CATEGORY).getPropertyOrder());
		list.remove("Auto-Generate Armor Sets");
		list.add(0, "Auto-Generate Armor Sets");
		Config.config.getCategory(AUTO_GEN_SETS_CATEGORY).setPropertyOrder(list);
		Config.config.getCategory(AUTO_GEN_SETS_CATEGORY).setComment("Choose if you want armor sets to be generated from other mods' blocks.");
		Property autoGenProp = Config.config.get(Config.AUTO_GEN_SETS_CATEGORY, "Auto-Generate Armor Sets", setEffectsArray.get(0), "Allows you to choose if you want armor sets to be generated from other mods' blocks.", autoGenSetsArray.toArray(new String[autoGenSetsArray.size()]));
		Config.autoGenSets = autoGenSetsArray.indexOf(autoGenProp.getString());

		for (ArmorSet set : ArmorSet.autoGeneratedSets.keySet()) {
			String name = ArmorSet.getItemStackDisplayName(set.stack, null);
			Property prop = Config.config.get(Config.AUTO_GEN_SETS_CATEGORY, name+" Armor Set", true, "Determines whether or not the "+name+" Armor set should be generated.");
			if (Config.autoGenSets == 0)
				prop.set(true);
			else if (Config.autoGenSets == 1)
				prop.set(false);
			ArmorSet.autoGeneratedSets.put(set, prop.getBoolean());
			if (!prop.getBoolean()) { //if false, remove from all maps
				ArmorSet.allSets.remove(set);
				ArmorSet.disabledItems.remove(set);
				ArmorSet.setsWithEffects.remove(set);
			}
			prop.setRequiresMcRestart(true);
		}		

		//Set effects
		list = new ArrayList<String>(Config.config.getCategory(SET_EFFECTS_CATEGORY).getPropertyOrder());
		list.remove("Armor Set Effects");
		list.add(0, "Armor Set Effects");
		Config.config.getCategory(SET_EFFECTS_CATEGORY).setPropertyOrder(list);
		Config.config.getCategory(SET_EFFECTS_CATEGORY).setComment("Choose which armor set effects you want enabled.");
		Property setEffectsProp = Config.config.get(Config.SET_EFFECTS_CATEGORY, "Armor Set Effects", setEffectsArray.get(0), "Allows you to choose which armor set effects you want enabled.", setEffectsArray.toArray(new String[setEffectsArray.size()]));
		Config.setEffects = setEffectsArray.indexOf(setEffectsProp.getString());

		for (ArmorSet set : ArmorSet.setsWithEffects.keySet()) {
			String name = ArmorSet.getItemStackDisplayName(set.stack, null);
			Property prop = Config.config.get(Config.SET_EFFECTS_CATEGORY, name+" Armor Effects", true, "Determines whether or not the "+name+" Armor set effect can be used.");
			if (Config.setEffects == 0)
				prop.set(true);
			else if (Config.setEffects == 1)
				prop.set(false);
			ArmorSet.setsWithEffects.put(set, prop.getBoolean());
		}		
		
		//Armor pieces required to activate set effect
		Property prop = Config.config.get(Configuration.CATEGORY_GENERAL, "Armor pieces required for Set Effect", 4, "Specifies how many armor pieces of a set are required for the set's effect to work.", 3, 4);
		Config.piecesForSet = prop.getInt();

		Config.config.save();
	}

	@SubscribeEvent(priority=EventPriority.NORMAL, receiveCanceled=true)
	public void onConfigChanged(final ConfigChangedEvent.OnConfigChangedEvent event) 
	{
		if (event.getModID().equals(BlockArmor.MODID)) 
			Config.syncConfig();
	}
}
